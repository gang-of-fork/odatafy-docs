{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Odatafy Documentation","text":"<p>This page contains the documentation for the odatafy ecosystem. It focuses on the core module, odatafy-parser, and gives an overview over the plugins, which are documented in their respective README files. This documentation only covers the odatafy-parser support of the oData v4 query options in the Feature-Support section. For the feature documentations of the plugins, please refer to their respective documentation. If you want to learn how the query options work, please refer to the oData v4 URL documentation.</p>"},{"location":"#what-is-odatafy","title":"What is odatafy?","text":"<p>Odatafy is an ecosystem of npm modules that aim to help you create oDatav4 compatible REST-APIs, thus allowing you to accelerate development and save time and money by helping you to implement an API that is based on the very-well established oData v4 standard. As it is by far the most tideous task, odatafy currently only supports query operations.</p>"},{"location":"#how-does-odatafy-work","title":"How does odatafy work?","text":"<p>The odatafy ecosystem is composed mainly of three parts: the core, plugins and showcases.</p>"},{"location":"#the-core","title":"The core","text":"<p>The core is the odatafy-parser npm module, which is a parser consisting of multiple peg.js grammars working together to parse an oData v4 URL and translate it into an Abstract Syntax Tree (AST). The structure of this AST is documented in the oDataParseResult section of our typedoc documentation. Now you could use the core on its own and program a translator for database queries on top of the AST. Luckily, we already did this for you by offering Plugins. </p>"},{"location":"#plugins","title":"Plugins","text":"<p>Plugins are the most essential part of developing an application with odatafy. Plugins are npm packages built on top of the AST, that the odatafy-parser provides. Currently, we are maintaining two plugins: - odatafy-mongodb: Convert odata v4 requests to MongoDB Aggregation Queries with the <code>parseODataUrl()</code> function - odatafy-mongoose: Effortlessly generate Service Metadata Files and Expand Mappings for odatafy-mongodb from mongoose   schemas</p>"},{"location":"#showcases","title":"Showcases","text":"<p>Finally, to bring it all together, we have created a few applications using the odatafy ecosystem for you to play around with and to guide you through using odatafy in your application. - odatafy-mongodb-example: A simple RESTful API leveraging all available plugins. Feel free to try out some odata queries here! - odatafy-flutter-app: A flutter app built on top of the odatafy-mongodb-example app that dynamically generates an admin dashboard for data querying and manipulation based on the Service Metadata and oDatav4 API provided by odatafy-mongodb and odatafy-mongoose.</p>"},{"location":"feature-support/","title":"Feature Support","text":"<p> Supported</p> <p> Partially Supported</p> <p> (Currently) Not Supported</p>"},{"location":"feature-support/#query-options","title":"Query Options","text":""},{"location":"feature-support/#select","title":"$select","text":"<p> Select specific properties  Select all structural properties with the star operator  Select properties of related entities in the Expand Options  Select navigation links  Request all actions or functions available on every returned entity  </p>"},{"location":"feature-support/#expand","title":"$expand","text":"<p> Request the value of related documents to be set inline  Request the references to the related documents to be set inline with /$ref  Expand Options  </p>"},{"location":"feature-support/#compute","title":"$compute","text":"<p> Computed Properties  </p>"},{"location":"feature-support/#filter","title":"$filter","text":"<p> Filter Expressions (see Sections Logical Operators, Arithmetic Operators, Grouping and Functions) for a detailed overview of supported $filter features</p>"},{"location":"feature-support/#orderby","title":"$orderby","text":"<p> Request ascending and descending ordering  using $orderby in the Expand Options  Request ordering by the count of related entities or items within a collection-valued property  </p>"},{"location":"feature-support/#top","title":"$top","text":"<p> Request to limit the maximum number of items returned  </p>"},{"location":"feature-support/#skip","title":"$skip","text":"<p> Request to skip the first n items of the query result   </p>"},{"location":"feature-support/#count","title":"$count","text":"<p> Request the total count of items in a collection to be returned along with the result  Request the count of related entities within the Expand Options  </p>"},{"location":"feature-support/#search","title":"$search","text":"<p> Search Terms  Search Phrases  NOT-Operator  AND-Operator  OR-Operator  Grouping with Parentheses  </p>"},{"location":"feature-support/#types","title":"Types","text":"<p> Edm.Binary Edm.Boolean  Edm.Byte  Edm.Date  Edm.DateTimeOffset  Edm.Decimal  Edm.Double  Edm.Duration  Edm.Guid  Edm.Int16  Edm.Int32  Edm.Int64  Edm.SByte  Edm.Single  Edm.Stream  Edm.String  Edm.TimeOfDay  Edm.Geography  Edm.GeographyPoint  Edm.GeographyLineString  Edm.GeographyPolygon  Edm.GeographyMultiPoint  Edm.GeographyMultiLineString  Edm.GeographyMultiPolygon  Edm.GeographyCollection  Edm.Geometry  Edm.GeometryPoint  Edm.GeometryLineString  Edm.GeometryPolygon  Edm.GeometryMultiPoint  Edm.GeometryMultiLineString  Edm.GeometryMultiPolygon  Edm.GeometryCollection  </p>"},{"location":"feature-support/#logical-operators","title":"Logical Operators","text":""},{"location":"feature-support/#comparison","title":"Comparison","text":"<p> eq (Equals)  ne (Not Equals)  gt (Greater Than)  lt (Less Than)  </p>"},{"location":"feature-support/#logical-expressions","title":"Logical Expressions","text":"<p> and (Logical and)  or (Logical or)  not (Logical not)  </p>"},{"location":"feature-support/#other","title":"Other","text":"<p> has (Has operator)  in (In operator)  </p>"},{"location":"feature-support/#arithmetic-operators","title":"Arithmetic Operators","text":""},{"location":"feature-support/#addition","title":"Addition","text":"<p> add (Numeric Types)  add (Date Types)  </p>"},{"location":"feature-support/#subtraction","title":"Subtraction","text":"<p> sub (Numeric Types)  sub (Date Types)  </p>"},{"location":"feature-support/#multiplication","title":"Multiplication","text":"<p> mul (Numeric Types)  mul (Date Types)  </p>"},{"location":"feature-support/#division","title":"Division","text":"<p> div (Numeric Types)  div (Date Types)  divby (Numeric Types)  mod (Numeric Types)  </p>"},{"location":"feature-support/#negation","title":"Negation","text":"<p> - (Numeric Types)  </p>"},{"location":"feature-support/#grouping-with-parentheses","title":"Grouping with parentheses","text":"<p> Grouping with parenthesis</p>"},{"location":"feature-support/#functions","title":"Functions","text":""},{"location":"feature-support/#string-and-collection-functions","title":"String and Collection Functions","text":""},{"location":"feature-support/#concat","title":"concat","text":"<p> concat(String, String)  concat(Collection, Collection)  </p>"},{"location":"feature-support/#contains","title":"contains","text":"<p> contains(String, String)  contains(Collection, Collection)  </p>"},{"location":"feature-support/#endswith","title":"endswith","text":"<p> endswith(String, String)  endswith(Collection, Collection)  </p>"},{"location":"feature-support/#indexof","title":"indexof","text":"<p> indexof(String, String)  indexof(Collection, Collection)  </p>"},{"location":"feature-support/#length","title":"length","text":"<p> length(Edm.String)  length(Collection)  </p>"},{"location":"feature-support/#startswith","title":"startswith","text":"<p> startswith(String, String)  startswith(Collection, Collection)  </p>"},{"location":"feature-support/#substring","title":"substring","text":"<p> substring(String, Number)  substring(String, Number, Number)  substring(Collection, Number)  substring(Collection, Number, Number)  </p>"},{"location":"feature-support/#collection-functions","title":"Collection Functions","text":"<p> hassubset(Collection, Collection)  hassubsequence(Collection, Collection)  </p>"},{"location":"feature-support/#string-functions","title":"String Functions","text":"<p> matchesPattern(String, String)  tolower(String)  toupper(String)  trim(String)  </p>"},{"location":"feature-support/#date-and-time-functions","title":"Date and Time Functions","text":"<p> date(Datetime)  year(Date)  year(Datetime)  month(Date)  month(Datetime)  day(Date)  day(Datetime)  time(Date)  time(Datetime)  hour(Date)  hour(Datetime)  minute(Datetime)  second(Datetime)  fractionalseconds(Datetime)  totaloffsetminutes(Datetime)  totalseconds(Datetime)  maxdatetime()  now()  mindatetime()  </p>"},{"location":"feature-support/#arithmetic-functions","title":"Arithmetic Functions","text":"<p> ceiling(Number)  floor(Number)  round(Number)  </p>"},{"location":"feature-support/#type-functions","title":"Type Functions","text":"<p> cast(Type)  cast(Expression, Type)  isof(Type)  isof(Expression, Type)  </p>"},{"location":"feature-support/#geo-functions","title":"Geo Functions","text":""},{"location":"feature-support/#geodistance","title":"geo.distance","text":"<p> geo.distance(GeographyPoint, GeographyPoint)  geo.distance(GeometryPoint, GeometryPoint)  </p>"},{"location":"feature-support/#geointersects","title":"geo.intersects","text":"<p> geo.intersects(GeographyPoint, GeographyPolygon)  geo.intersects(GeometryPoint, GeometryPolygon)  </p>"},{"location":"feature-support/#geolength","title":"geo.length","text":"<p> geo.length(GeographyLineString)  geo.length(GeometryLineString)  </p>"},{"location":"feature-support/#conditional-functions","title":"Conditional Functions","text":"<p> case(Edm.Boolean:expression, ..., Edm.Boolean:expression)  </p>"},{"location":"feature-support/#lambda-operators","title":"Lambda Operators","text":"<p> any(Symbol:Edm.Boolean:expression)  all(Symbol:Edm.Boolean:expression)  </p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#getting-started","title":"Getting started","text":"<p>The examples below show how to implement the most common usage scenarios in an express.js service.</p>"},{"location":"getting-started/#transform-a-query-into-an-ast-using-odatafy-parser","title":"Transform a query into an AST using odatafy-parser","text":""},{"location":"getting-started/#transform-a-query-into-a-mongodb-aggregation-query-using-odatafy-mongodb","title":"Transform a query into a MongoDB aggregation query using odatafy-mongodb","text":""},{"location":"getting-started/#generate-an-expandmapping-and-enable-expand-using-odatafy-mongodb-and-odatafy-mongoose","title":"Generate an ExpandMapping and enable $expand using odatafy-mongodb and odatafy-mongoose","text":""},{"location":"getting-started/#generate-the-service-metadata-file-using-odatafy-mongoose","title":"Generate the Service Metadata File using odatafy-mongoose","text":""}]}